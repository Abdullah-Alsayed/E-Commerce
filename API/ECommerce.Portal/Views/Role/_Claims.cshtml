@using ECommerce.BLL.Features.Roles.Dtos
@model IEnumerable<AllClaimsDto>;
@inject IStringLocalizer<RoleController> _Localizer;
@{
    var groupedItems = Model.OrderBy(x => x.Key).ToList();
}
@if (Model != null && Model.Any())
{
    <form id="updatePermissionForm">
        <div class="accordion accordion-popout mt-4" id="accordionPopout">
            @for (int groupIndex = 0; groupIndex < groupedItems.Count; groupIndex++)
            {
                var group = groupedItems[groupIndex].Claims;
                var groupKey = groupedItems[groupIndex].Key;
                var isFirst = groupIndex == 0;
                var collapseId = $"collapse{groupIndex}";
                var headingId = $"heading{groupIndex}";
                <input hidden name="ID" value="@Model?.FirstOrDefault()?.ID" />
                <div class="accordion-item">
                    <h2 class="accordion-header" id="@headingId">
                        <div class="d-flex align-items-center">
                            <input type="checkbox" class="form-check-input me-2 select-all-checkbox"
                                   data-target="#@collapseId" onchange="toggleAllCheckboxes(event, this)" checked="@group.All(x=>x.IsChecked)">
                            <button type="button" class="accordion-button @(isFirst ? "" : "collapsed")"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#@collapseId"
                                    aria-expanded="@(isFirst.ToString().ToLower())"
                                    aria-controls="@collapseId">
                                @_Localizer[groupKey]
                            </button>
                        </div>

                    </h2>
                    <div id="@collapseId" class="accordion-collapse collapse @(isFirst ? "show" : "")"
                         aria-labelledby="@headingId" data-bs-parent="#accordionPopout">
                        <div class="accordion-body">
                            <div class="d-flex justify-content-around">
                                @for (int itemIndex = 0; itemIndex < group.Count(); itemIndex++)
                                {
                                    var item = group.ElementAt(itemIndex);
                                    <div class="form-check mb-3">
                                        <input class="form-check-input claim-checkbox" type="checkbox" name="Claims"
                                               id="checkbox-@item.Claim" value="@item.Claim"
                                               data-group="@groupIndex"
                                               checked="@(item.IsChecked ? "checked" : null)" />
                                        <label class="form-check-label" for="checkbox-@item.Claim">
                                            <span class="h6 d-block mb-1">@_Localizer[item.Operation]</span>
                                            <small class="text-muted">
                                                @_Localizer[$"Title{item.Operation}"]
                                            </small>
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </form>
}
